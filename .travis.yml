# Adopted from:
# https://github.com/codecov/example-cpp11-cmake/blob/2036ea/.travis.yml
language: cpp
dist: xenial

cache: # see https://docs.travis-ci.com/user/caching/
- directories:
  - $HOME/.cache

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - g++-8
      - libboost1.67
      - libboost1.67-dev

env:
  - MYCC=gcc-8 MYAR=gcc-ar-8 MYRANLIB=gcc-ranlib-8 MYCXX=g++-8 GCOV=gcov-8

before_install:
  - export CXX=$MYCXX
  - export CC=$MYCC
  - export AR=$MYAR
  - export RANLIB=$MYRANLIB
  - wget http://downloads.sourceforge.net/ltp/lcov-1.14.tar.gz
  - tar xzvf lcov-1.14.tar.gz
  - export PATH="`pwd`/lcov-1.14/bin:$PATH"

# (fake) install dependencies (usually involves wget, configure, make, ...)
# install into cache folder (build binaries+headers only, no sources and do NOT build there)
install:
- mkdir -p $HOME/.cache
- touch $HOME/.cache/fake.so

script: ./build.sh

after_success:
# Create lcov report
# capture coverage info
- lcov --gcov-tool "$GCOV" --directory . --capture --output-file coverage.info
# filter out system and extra files.
# To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
- lcov --gcov-tool "$GCOV" --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
# output coverage data for debugging (optional)
- lcov --gcov-tool "$GCOV" --list coverage.info
# Uploading to CodeCov
# '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
